name: Build and Publish Docker Image

on:
  push:
    branches:
    - min-ubuntu

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: git_wrapper
      run: |
        echo "当前工作目录: $(pwd)"
        wget "https://github.com/zhaarey/wrapper/releases/download/linux.V2/wrapper.x86_64.tar.gz"
        mkdir ${GITHUB_WORKSPACE}/wrapper
        tar -xzf wrapper.x86_64.tar.gz -C ${GITHUB_WORKSPACE}/wrapper
        ls -l ${GITHUB_WORKSPACE}/  
    - name: git_amdl
      run: |
        echo "当前工作目录: $(pwd)"
        git clone https://github.com/zhaarey/apple-music-downloader.git
        apt update&&apt install golang -y
        cd apple-music-downloader
        go build -o dl main.go
        echo "当前工作目录: $(pwd)"
        mv dl ../
        mv config.yaml ../
        ls -l ../
    - name: git_MP4box
      run: |
        apt update && apt install build-essential pkg-config git zlib1g-dev -y
        git clone https://github.com/gpac/gpac.git gpac_public
        cd gpac_public
        ./configure --static-bin
        make
        mv /home/runner/work/wrapper-test/wrapper-test/gpac_public/bin/gcc/mp4box ../
        ls -l ../

    - name: Set up QEMU
      # QEMU 是用于在一种架构上模拟另一种架构的工具  
      # Docker BuildKit 使用 QEMU 来实现跨平台构建  
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 设置环境变量以包含时间戳  
    - name: Get current date
      run: export TZ='Asia/Shanghai'&& echo "BUILD_DATE=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

    # 构建并推送 Docker 镜像  
    - name: Build and push Docker images
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/wrapper-test:latest
          ${{ secrets.DOCKER_USERNAME }}/wrapper-test:${{ env.BUILD_DATE }}
